generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(uuid())
  email           String         @unique
  name            String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  gender          String?
  image           String?
  password        String
  refreshToken    String?
  apiKey          String         @default("")
  collaborators   Collaborator[]
  projects        Project[]      @relation("OwnerProjects")
  tasksAssignedBy Task[]         @relation("AssignedBy")
  tasksAssigned   Task[]         @relation("AssignedTasks")
}

model Project {
  id            String         @id @default(uuid())
  name          String
  description   String?
  ownerId       String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  collaborators Collaborator[]
  owner         User           @relation("OwnerProjects", fields: [ownerId], references: [id], onDelete: Cascade)
  tasks         Task[]
}

model Task {
  id           String     @id @default(uuid())
  title        String
  description  String
  projectId    String
  assignedToId String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  assignedById String
  status       TaskStatus @default(pending)
  assignedBy   User       @relation("AssignedBy", fields: [assignedById], references: [id], onDelete: Cascade)
  assignedTo   User       @relation("AssignedTasks", fields: [assignedToId], references: [id], onDelete: Cascade)
  project      Project    @relation(fields: [projectId], references: [id], onDelete: Cascade)
}

model Collaborator {
  userId    String
  projectId String
  joinedAt  DateTime @default(now())
  id        String   @id @default(uuid())
  role      UserRole @default(member)
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, projectId])
}

enum TaskStatus {
  pending
  in_progress
  completed
  cancelled
}

enum UserRole {
  admin
  member
}

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  email         String         @unique
  name          String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  gender        String?
  image         String?
  password      String
  refreshToken  String?
  apiKey        String         @default("")
  collaborators Collaborator[]
  projects      Project[]      @relation("OwnerProjects")
  tasks         Task[]         @relation("AssignedTasks")
}

model Project {
  id            String         @id @default(uuid())
  name          String
  description   String?
  ownerId       String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  collaborators Collaborator[]
  owner         User           @relation("OwnerProjects", fields: [ownerId], references: [id])
  tasks         Task[]
}

model Task {
  id           String   @id @default(uuid())
  title        String
  description  String?
  status       String   @default("pending")
  projectId    String
  assignedToId String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  assignedTo   User?    @relation("AssignedTasks", fields: [assignedToId], references: [id])
  project      Project  @relation(fields: [projectId], references: [id])
}

model Collaborator {
  userId    String
  projectId String
  role      String   @default("member")
  joinedAt  DateTime @default(now())
  id        String   @id @default(uuid())
  project   Project  @relation(fields: [projectId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@unique([userId, projectId])
}
